{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcda Documentaci\u00f3n del Proyecto MVC Enlaces","text":""},{"location":"#ciclo-de-vida-del-desarrollo-de-la-aplicacion","title":"\ud83d\udd04 Ciclo de Vida del Desarrollo de la Aplicaci\u00f3n","text":"<p>A continuaci\u00f3n, se describe el proceso completo de creaci\u00f3n de esta aplicaci\u00f3n MVC, desde la configuraci\u00f3n de la base de datos hasta la implementaci\u00f3n y pruebas.</p>"},{"location":"#1-configuracion-de-la-base-de-datos","title":"\ud83d\uddc4\ufe0f 1. Configuraci\u00f3n de la Base de Datos","text":""},{"location":"#paso-1-crear-las-tablas-en-phpmyadmin","title":"Paso 1: Crear las Tablas en <code>phpMyAdmin</code>","text":"<ol> <li>Abre <code>phpMyAdmin</code> o cualquier herramienta para gestionar MySQL.</li> <li>Ejecuta las siguientes consultas SQL para crear las tablas <code>categoria</code> y <code>vinculos</code>:</li> </ol> <pre><code>CREATE TABLE `categoria` (\n    `pk_categoria` int NOT NULL AUTO_INCREMENT,\n    `categoria` varchar(25) DEFAULT NULL,\n    `tipo` varchar(15) DEFAULT NULL,\n    PRIMARY KEY (`pk_categoria`),\n    UNIQUE KEY `categoria` (`categoria`)\n) ENGINE=InnoDB;\n\nCREATE TABLE `vinculos` (\n    `pk_vinculo` int NOT NULL AUTO_INCREMENT,\n    `enlace` varchar(255) DEFAULT NULL,\n    `titulo` varchar(255) DEFAULT NULL,\n    `fk_categoria` int DEFAULT NULL,\n    PRIMARY KEY (`pk_vinculo`),\n    KEY `fk_vinculos_categorias` (`fk_categoria`),\n    CONSTRAINT `fk_vinculos_categorias` FOREIGN KEY (`fk_categoria`) REFERENCES `categoria` (`pk_categoria`)\n) ENGINE=InnoDB;\n</code></pre>"},{"location":"#paso-2-crear-la-vista-vista_enlaces","title":"Paso 2: Crear la Vista vista_enlaces","text":"<p>Esta vista combina las tablas categoria y vinculos para facilitar las b\u00fasquedas:</p> <pre><code>CREATE VIEW vista_enlaces AS\nSELECT\n    vinculos.pk_vinculo,\n    vinculos.enlace,\n    vinculos.titulo,\n    categoria.categoria AS nombre_categoria,\n    categoria.tipo AS tipo_categoria\nFROM vinculos\nJOIN categoria ON vinculos.fk_categoria = categoria.pk_categoria;\n</code></pre>"},{"location":"#2-desarrollo-del-objeto-modelbbdd","title":"\ud83d\udcbb 2. Desarrollo del Objeto ModelBBDD","text":""},{"location":"#proposito","title":"Prop\u00f3sito:","text":"<p>El objeto ModelBBDD maneja la conexi\u00f3n a la base de datos y las consultas.</p>"},{"location":"#codigo-completo","title":"C\u00f3digo Completo:","text":"<pre><code>&lt;?php\n\nclass ModelBBDD {\n    private $host = 'localhost';\n    private $dbname = 'enlaces';\n    private $user = 'root';\n    private $password = '';\n    private $pdo;\n\n    public function __construct() {\n        try {\n            $this-&gt;pdo = new PDO(\"mysql:host={$this-&gt;host};dbname={$this-&gt;dbname}\", $this-&gt;user, $this-&gt;password);\n            $this-&gt;pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n        } catch (PDOException $e) {\n            die(\"Error de conexi\u00f3n: \" . $e-&gt;getMessage());\n        }\n    }\n\n    public function getVistaEnlaces($query = \"\", $filterType = \"\") {\n        $sql = \"SELECT * FROM vista_enlaces\";\n        $params = [];\n\n        if (!empty($filterType)) {\n            switch ($filterType) {\n                case 'categoria':\n                    $sql .= \" WHERE nombre_categoria LIKE ?\";\n                    $params[] = \"%$query%\";\n                    break;\n                case 'lenguaje':\n                    $sql .= \" WHERE tipo_categoria = 'LENGUAJE'\";\n                    if (!empty($query)) {\n                        $sql .= \" AND (nombre_categoria LIKE ? OR titulo LIKE ?)\";\n                        $params[] = \"%$query%\";\n                        $params[] = \"%$query%\";\n                    }\n                    break;\n                case 'titulo':\n                    $sql .= \" WHERE titulo LIKE ?\";\n                    $params[] = \"%$query%\";\n                    break;\n                default:\n                    throw new Exception(\"Filtro no reconocido\");\n            }\n        }\n\n        $stmt = $this-&gt;pdo-&gt;prepare($sql);\n        $stmt-&gt;execute($params);\n        return $stmt-&gt;fetchAll(PDO::FETCH_ASSOC);\n    }\n}\n</code></pre>"},{"location":"#3-desarrollo-de-la-aplicacion-mvc","title":"\ud83c\udfd7\ufe0f 3. Desarrollo de la Aplicaci\u00f3n MVC","text":""},{"location":"#estructura-del-proyecto","title":"Estructura del Proyecto","text":"<pre><code>/project-root\n\u251c\u2500\u2500 /assets\n\u2502   \u2514\u2500\u2500 styles.css            # Estilos personalizados\n\u251c\u2500\u2500 /controllers\n\u2502   \u251c\u2500\u2500 Autoload.php          # Carga autom\u00e1tica de clases\n\u2502   \u251c\u2500\u2500 ViewController.php    # Gesti\u00f3n centralizada de vistas\n\u2502   \u251c\u2500\u2500 Router.php            # Sistema de enrutamiento\n\u2502   \u2514\u2500\u2500 PreguntasController.php # Controlador para b\u00fasquedas\n\u251c\u2500\u2500 /models\n\u2502   \u2514\u2500\u2500 ModelBBDD.php         # Clase para manejar la conexi\u00f3n a la base de datos\n\u251c\u2500\u2500 /views\n\u2502   \u251c\u2500\u2500 preguntas.php         # Formulario de b\u00fasqueda\n\u2502   \u251c\u2500\u2500 respuesta.php         # Resultados de b\u00fasqueda\n\u2502   \u251c\u2500\u2500 header.php            # Encabezado (Navbar)\n\u2502   \u2514\u2500\u2500 footer.php            # Pie de p\u00e1gina\n\u2514\u2500\u2500 index.php                 # Punto de entrada principal\n</code></pre>"},{"location":"#a-archivo-autoloadphp","title":"a) Archivo <code>Autoload.php</code>","text":"<p>Encargado de cargar autom\u00e1ticamente las clases necesarias.</p> <pre><code>&lt;?php\n\nspl_autoload_register(function ($class) {\n    $paths = ['./controllers/', './models/'];\n    foreach ($paths as $path) {\n        $file = $path . $class . '.php';\n        if (file_exists($file)) {\n            require_once $file;\n            return;\n        }\n    }\n    throw new Exception(\"Clase no encontrada: $class\");\n});\n</code></pre>"},{"location":"#b-archivo-viewcontrollerphp","title":"b) Archivo <code>ViewController.php</code>","text":"<p>Gestiona la renderizaci\u00f3n de vistas.</p> <pre><code>&lt;?php\n\nclass ViewController {\n    public static function render($view, $data = []) {\n        extract($data); // Extrae las variables para usarlas en la vista.\n        $viewPath = './views/' . $view . '.php';\n\n        if (file_exists($viewPath)) {\n            require './views/header.php';\n            require $viewPath;\n            require './views/footer.php';\n        } else {\n            throw new Exception(\"Vista no encontrada: $view\");\n        }\n    }\n}\n</code></pre>"},{"location":"#c-archivo-preguntascontrollerphp","title":"c) Archivo <code>PreguntasController.php</code>","text":"<p>Gestiona las b\u00fasquedas y renderiza las vistas.</p> <pre><code>&lt;?php\n\nclass PreguntasController {\n    public function index() {\n        ViewController::render('preguntas');\n    }\n\n    public function buscar() {\n        $modelo = new ModelBBDD();\n        $query = $_POST['query'] ?? '';\n        $filter = $_POST['filter'] ?? '';\n\n        if (empty($filter)) {\n            $error = \"Debe seleccionar un filtro antes de buscar.\";\n            ViewController::render('preguntas', ['error' =&gt; $error]);\n            return;\n        }\n\n        $resultados = $modelo-&gt;getVistaEnlaces($query, $filter);\n        ViewController::render('respuesta', ['resultados' =&gt; $resultados]);\n    }\n}\n</code></pre>"},{"location":"#4-pruebas-y-resultados","title":"\u2705 4. Pruebas y Resultados","text":"<p>Probar la Aplicaci\u00f3n 1. Configura la base de datos como se indica. 2. Ejecuta el servidor local:</p> <pre><code>php -S localhost:8000\n</code></pre> <ol> <li>Abre en el navegador: http://localhost:8000.</li> </ol>"}]}